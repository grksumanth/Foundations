#! /bin/bash

#echo "$1"
#echo "$2"
#mkpasswd -m sha-512 password salt
if  ! type mkpasswd &> /dev/null ; then
        echo "mkpasswd not present please install and retry or install whois"
        exit 1
fi

#if [[ ! -f $1 || ! -f $2 ]]; then
#	echo "One of the files provided are missing please check"
#fi

if [ ! -f $1 ]; then
	echo "Dictionary File not found"
	exit 1
fi

if [ ! -f $2 ]; then
	echo "Shadow File not found"
	exit 1
fi

#Reades the file and loop line by line to get the line by line from unshadowed file
while IFS= read -r line
do
	#Taking the file and getting the hash for the password
	hash=$(echo "$line" | awk -F ":" '{print $2}')
	#Checking for the empty and users which are removed
	if [ ! -z "$hash" ];then
		if [ ! "$hash" == "*" ]; then
		#Taking the values from the hash
		algo=$(echo "$hash" | awk -F "$" '{print $2}')
		salt=$(echo "$hash" | awk -F "$" '{print $3}')
		achash=$(echo "$hash" | awk -F "$" '{print $4}')
		if [ "$algo" -eq 6 ]; then
			usedalgo="sha-512"
		fi
		if [ "$algo" -eq 5 ]; then
			usedalgo="sha-256"
		fi
		if [ "$algo" -eq 1 ]; then
			usedalgo="md5"
		fi
		if [ -z "$usedalgo" ]; then
			exit 1
		fi
		#Reading the dictonary file from the input
		while IFS= read -r dictword
		do
		#generating the password
		tstpasswd=$(mkpasswd -m "$usedalgo" "$dictword" "$salt")
		hashtocmp=$(echo "$tstpasswd" | awk -F "$" '{print $4}')
			#Comparing the Hash generated by the algorithm.
			if [ "$hashtocmp" == "$achash" ]; then
				username=$( echo "$line" | awk -F ":" '{print $1}')
				echo "Found password for user $username: $dictword"
			fi
		#echo "$dictword"
		done < "$1"
		fi
	fi
	#echo "$line"
done < "$2"
